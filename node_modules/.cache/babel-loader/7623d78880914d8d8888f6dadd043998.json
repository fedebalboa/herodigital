{"ast":null,"code":"var _jsxFileName = \"/Users/federicobalboa/Desktop/fed-assignment-ilsxgu/my-app/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport Input from \"./components/Input\";\nimport validation from \"./validation\";\nimport \"./App.css\";\nimport \"./normalize.css\";\nimport api from \"./api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst INITIAL_VALUES = {\n  firstname: \"\",\n  lastname: \"\",\n  email: \"\"\n};\n\nconst App = () => {\n  _s();\n\n  const [successMessage, setSuccessMessage] = useState();\n  const [values, setValues] = useState(INITIAL_VALUES);\n  const [errors, setErrors] = useState({});\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const {\n      hasErrors,\n      errors\n    } = validation(values);\n    setErrors(errors);\n\n    if (!hasErrors) {\n      try {\n        const result = await api(values);\n\n        if (result.status === \"success\") {\n          setSuccessMessage(result.message);\n        } else {\n          throw result;\n        }\n      } catch (e) {\n        alert((e === null || e === void 0 ? void 0 : e.message) || \"Oops, somthing went wrong, try again\");\n      }\n    }\n  };\n\n  if (successMessage) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: successMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: e => {\n          e.preventDefault();\n          setSuccessMessage(null);\n          setValues(INITIAL_VALUES);\n        },\n        children: \"OK\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  }\n  /*   return (\n      <div className=\"main-container\">\n        <div>\n          <div>\n            <h2 className=\"title\">Sign up for email updates</h2>\n            <h6>*Indicates Required Fied</h6>\n          </div>\n  \n          <form className=\"form-container\">\n            <Input\n              type=\"text\"\n              name=\"firstname\"\n              required\n              label=\"First name\"\n              value={values.firstname}\n              onChange={(text) => {\n                setValues({\n                  ...values,\n                  firstname: text,\n                });\n              }}\n              error={errors.firstname}\n            />\n  \n            <Input\n              type=\"text\"\n              name=\"lastname\"\n              value={values.lastname}\n              required\n              label=\"Last Name\"\n              onChange={(text) => {\n                setValues({\n                  ...values,\n                  lastname: text,\n                });\n              }}\n              error={errors.lastname}\n            />\n  \n            <Input\n              type=\"text\"\n              name=\"email\"\n              value={values.email}\n              required\n              label=\"Email address\"\n              onChange={(text) => {\n                setValues({\n                  ...values,\n                  email: text,\n                });\n              }}\n              error={errors.email}\n            />\n  \n            <Input\n              type=\"text\"\n              name=\"organization\"\n              value={values.organization}\n              label=\"Organization\"\n              onChange={(text) => {\n                setValues({\n                  ...values,\n                  organization: text,\n                });\n              }}\n              error={errors.organization}\n            />\n  \n            <label htmlFor=\"eu-select\">\n              EU Resident*\n              <select name=\"resident\" required>\n                <option value=\"\">- SELECT ONE -</option>\n                <option value=\"yes\">Yes</option>\n                <option value=\"no\">No</option>\n              </select>\n            </label>\n  \n            <div>\n              {errors.advances && <p className=\"error\">{errors.advances}</p>}\n              <label\n              htmlFor=\"advances\"\n              onClick={() => {\n                  setValues({\n                      ...values,\n                      advances: !values.advances,\n                  });\n              }}\n              >\n                <input\n                  type=\"checkbox\"\n                  name=\"advances\"\n                  checked={values.advances}\n                  onChange={() => {\n                    setValues({\n                      ...values,\n                      advances: !values.advances,\n                    });\n                  }}\n                />\n                Advances *\n              </label>\n            </div>\n  \n            <div>\n              <label\n              htmlFor=\"alerts\"\n              onClick={() => {\n                  setValues({\n                      ...values,\n                      alerts: !values.alerts,\n                  });\n              }}\n              >\n                <input\n                  type=\"checkbox\"\n                  name=\"alerts\"\n                  checked={values.alerts}\n                />\n                Alerts\n              </label>\n            </div>\n  \n            <div>\n              <label\n                  htmlFor=\"other-communictions\"\n                  onClick={() => {\n                      setValues({\n                          ...values,\n                          otherComs: !values.otherComs,\n                      });\n                  }}\n              >\n                <input\n                  type=\"checkbox\"\n                  name=\"otherComs\"\n                  checked={values.otherComs}\n                />\n                other communications\n              </label>\n            </div>\n  \n            <div>\n              <button type=\"submit\" className=\"submit\" onClick={handleSubmit}>\n                Submit\n              </button>\n              <button type=\"button\" onClick={() => {\n                  if(window.confirm(\"Are you sure?\")) {\n                      setValues(INITIAL_VALUES)\n                  }\n              }}>Reset</button>\n            </div>\n          </form>\n        </div>\n      </div>\n    ); */\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      id: \"masthead\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Responsive Form\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      children: /*#__PURE__*/_jsxDEV(\"fieldset\", {\n        children: [/*#__PURE__*/_jsxDEV(\"legend\", {\n          children: \"Login Form\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"box\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            for: \"First Name\",\n            children: \"Name:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"FirstName\",\n            placeholder: \"Enter Your Full name\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 225,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"box\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            for: \"email\",\n            children: \"E-mail:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            id: \"email\",\n            placeholder: \"xyz@gmail.com\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 232,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"box\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            for: \"website\",\n            children: \"Website:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"website\",\n            placeholder: \"Website\",\n            required: true,\n            pattern: \"https?://.+\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 241,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"box\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            for: \"pass\",\n            children: \"Password:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 246,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            id: \"pass\",\n            placeholder: \"**********\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 250,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"box\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"submit\",\n            value: \"Submit\",\n            id: \"btn\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 255,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 3\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 1\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"help\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Forgot your password?\", /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"#\",\n          children: \"Click here to reset it\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 3\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 1\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 209,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"pLrfeJemKhc1yxwqnc3Zentki4U=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/federicobalboa/Desktop/fed-assignment-ilsxgu/my-app/src/App.js"],"names":["React","useState","Input","validation","api","INITIAL_VALUES","firstname","lastname","email","App","successMessage","setSuccessMessage","values","setValues","errors","setErrors","handleSubmit","e","preventDefault","hasErrors","result","status","message","alert"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport Input from \"./components/Input\";\nimport validation from \"./validation\";\nimport \"./App.css\";\nimport \"./normalize.css\";\nimport api from \"./api\";\n\nconst INITIAL_VALUES = {\n    firstname: \"\",\n    lastname: \"\",\n    email: \"\",\n}\n\nconst App = () => {\n  const [successMessage, setSuccessMessage] = useState()\n  const [values, setValues] = useState(INITIAL_VALUES);\n  const [errors, setErrors] = useState({});\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    const { hasErrors, errors } = validation(values);\n    setErrors(errors);\n\n    if (!hasErrors) {\n        try {\n            const result = await api(values);\n\n            if (result.status === \"success\") {\n                setSuccessMessage(result.message)\n            } else {\n                throw result;\n            }\n        } catch (e) {\n            alert(e?.message || \"Oops, somthing went wrong, try again\")\n        }\n    }\n  };\n\n  if (successMessage) {\n      return (\n          <>\n        <p>{successMessage}</p>\n        <button onClick={(e) => {\n            e.preventDefault();\n            setSuccessMessage(null);\n            setValues(INITIAL_VALUES);\n        }}>OK</button>\n        </>\n      )\n  }\n\n/*   return (\n    <div className=\"main-container\">\n      <div>\n        <div>\n          <h2 className=\"title\">Sign up for email updates</h2>\n          <h6>*Indicates Required Fied</h6>\n        </div>\n\n        <form className=\"form-container\">\n          <Input\n            type=\"text\"\n            name=\"firstname\"\n            required\n            label=\"First name\"\n            value={values.firstname}\n            onChange={(text) => {\n              setValues({\n                ...values,\n                firstname: text,\n              });\n            }}\n            error={errors.firstname}\n          />\n\n          <Input\n            type=\"text\"\n            name=\"lastname\"\n            value={values.lastname}\n            required\n            label=\"Last Name\"\n            onChange={(text) => {\n              setValues({\n                ...values,\n                lastname: text,\n              });\n            }}\n            error={errors.lastname}\n          />\n\n          <Input\n            type=\"text\"\n            name=\"email\"\n            value={values.email}\n            required\n            label=\"Email address\"\n            onChange={(text) => {\n              setValues({\n                ...values,\n                email: text,\n              });\n            }}\n            error={errors.email}\n          />\n\n          <Input\n            type=\"text\"\n            name=\"organization\"\n            value={values.organization}\n            label=\"Organization\"\n            onChange={(text) => {\n              setValues({\n                ...values,\n                organization: text,\n              });\n            }}\n            error={errors.organization}\n          />\n\n          <label htmlFor=\"eu-select\">\n            EU Resident*\n            <select name=\"resident\" required>\n              <option value=\"\">- SELECT ONE -</option>\n              <option value=\"yes\">Yes</option>\n              <option value=\"no\">No</option>\n            </select>\n          </label>\n\n          <div>\n            {errors.advances && <p className=\"error\">{errors.advances}</p>}\n            <label\n            htmlFor=\"advances\"\n            onClick={() => {\n                setValues({\n                    ...values,\n                    advances: !values.advances,\n                });\n            }}\n            >\n              <input\n                type=\"checkbox\"\n                name=\"advances\"\n                checked={values.advances}\n                onChange={() => {\n                  setValues({\n                    ...values,\n                    advances: !values.advances,\n                  });\n                }}\n              />\n              Advances *\n            </label>\n          </div>\n\n          <div>\n            <label\n            htmlFor=\"alerts\"\n            onClick={() => {\n                setValues({\n                    ...values,\n                    alerts: !values.alerts,\n                });\n            }}\n            >\n              <input\n                type=\"checkbox\"\n                name=\"alerts\"\n                checked={values.alerts}\n              />\n              Alerts\n            </label>\n          </div>\n\n          <div>\n            <label\n                htmlFor=\"other-communictions\"\n                onClick={() => {\n                    setValues({\n                        ...values,\n                        otherComs: !values.otherComs,\n                    });\n                }}\n            >\n              <input\n                type=\"checkbox\"\n                name=\"otherComs\"\n                checked={values.otherComs}\n              />\n              other communications\n            </label>\n          </div>\n\n          <div>\n            <button type=\"submit\" className=\"submit\" onClick={handleSubmit}>\n              Submit\n            </button>\n            <button type=\"button\" onClick={() => {\n                if(window.confirm(\"Are you sure?\")) {\n                    setValues(INITIAL_VALUES)\n                }\n            }}>Reset</button>\n          </div>\n        </form>\n      </div>\n    </div>\n  ); */\n\n  return (\n    <div>\n    <header id=\"masthead\">\n    <h1>\n      Responsive Form\n    </h1>\n</header>\n<form>\n  <fieldset>\n\n    <legend>\n      Login Form\n    </legend>\n    <div class=\"box\">\n      <label for=\"First Name\">\n        Name:\n      </label>\n      <input type=\"text\" id=\"FirstName\" placeholder=\"Enter Your Full name\" required/>\n    </div>\n    <div class=\"box\">\n\n      <label for=\"email\">\n        E-mail:\n      </label>\n      <input type=\"email\" id=\"email\" placeholder=\"xyz@gmail.com\" required/>\n    </div>\n\n    <div class=\"box\">\n\n      <label for=\"website\">\n        Website:\n      </label>\n\n      <input type=\"text\" id=\"website\" placeholder=\"Website\" required pattern=\"https?://.+\"/>\n    </div>\n\n    <div class=\"box\">\n\n      <label for=\"pass\">\n        Password:\n      </label>\n\n      <input type=\"password\" id=\"pass\" placeholder=\"**********\" required/>\n    </div>\n\n    <div class=\"box\">\n\n      <input type=\"submit\" value=\"Submit\" id=\"btn\"/>\n    </div>\n\n  </fieldset>\n</form>\n<div class=\"help\">\n  <p>\n    Forgot your password?\n    <a href=\"#\">\n      Click here to reset it\n    </a>\n\n    </p>\n</div>\n</div>\n  )\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}