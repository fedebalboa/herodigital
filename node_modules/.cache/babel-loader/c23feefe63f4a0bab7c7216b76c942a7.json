{"ast":null,"code":"var _jsxFileName = \"/Users/federicobalboa/Desktop/fed-assignment-ilsxgu/my-app/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport Input from \"./components/Input\";\nimport validation from \"./validation\";\nimport \"./App.css\";\nimport \"./normalize.css\";\nimport api from \"./api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst INITIAL_VALUES = {\n  firstname: \"\",\n  lastname: \"\",\n  email: \"\"\n};\n\nconst App = () => {\n  _s();\n\n  const [successMessage, setSuccessMessage] = useState();\n  const [values, setValues] = useState(INITIAL_VALUES);\n  const [errors, setErrors] = useState({});\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const {\n      hasErrors,\n      errors\n    } = validation(values);\n    setErrors(errors);\n\n    if (!hasErrors) {\n      try {\n        const result = await api(values);\n\n        if (result.status === \"success\") {\n          setSuccessMessage(result.message);\n        } else {\n          throw result;\n        }\n      } catch (e) {\n        alert((e === null || e === void 0 ? void 0 : e.message) || \"Oops, somthing went wrong, try again\");\n      }\n    }\n  };\n\n  if (successMessage) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: successMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: e => {\n          e.preventDefault();\n          setSuccessMessage(null);\n          setValues(INITIAL_VALUES);\n        },\n        children: \"OK\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"title\",\n          children: \"Sign up for email updates\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n          children: \"*Indicates Required Field\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"form-container\",\n        children: [/*#__PURE__*/_jsxDEV(Input, {\n          type: \"text\",\n          name: \"firstname\",\n          required: true,\n          label: \"First name\",\n          value: values.firstname,\n          onChange: text => {\n            setValues({ ...values,\n              firstname: text\n            });\n          },\n          error: errors.firstname\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          type: \"text\",\n          name: \"lastname\",\n          value: values.lastname,\n          required: true,\n          label: \"Last Name\",\n          onChange: text => {\n            setValues({ ...values,\n              lastname: text\n            });\n          },\n          error: errors.lastname\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          type: \"text\",\n          name: \"email\",\n          value: values.email,\n          required: true,\n          label: \"Email address\",\n          onChange: text => {\n            setValues({ ...values,\n              email: text\n            });\n          },\n          error: errors.email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          type: \"text\",\n          name: \"organization\",\n          value: values.organization,\n          label: \"Organization\",\n          onChange: text => {\n            setValues({ ...values,\n              organization: text\n            });\n          },\n          error: errors.organization\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"test\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"eu-select\",\n            children: [\"EU Resident*\", /*#__PURE__*/_jsxDEV(\"select\", {\n              name: \"resident\",\n              required: true,\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"- SELECT ONE -\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 123,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"yes\",\n                children: \"Yes\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 124,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"no\",\n                children: \"No\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 125,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [errors.advances && /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"error\",\n              children: errors.advances\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"advances\",\n              onClick: () => {\n                setValues({ ...values,\n                  advances: !values.advances\n                });\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"checkbox\",\n                name: \"advances\",\n                checked: values.advances,\n                onChange: () => {\n                  setValues({ ...values,\n                    advances: !values.advances\n                  });\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 140,\n                columnNumber: 15\n              }, this), \"Advances *\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"alerts\",\n              onClick: () => {\n                setValues({ ...values,\n                  alerts: !values.alerts\n                });\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"checkbox\",\n                name: \"alerts\",\n                checked: values.alerts\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 165,\n                columnNumber: 15\n              }, this), \"Alerts\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 156,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"other-communictions\",\n              onClick: () => {\n                setValues({ ...values,\n                  otherComs: !values.otherComs\n                });\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"checkbox\",\n                name: \"otherComs\",\n                checked: values.otherComs\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 184,\n                columnNumber: 15\n              }, this), \"other communications\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 175,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"button_container\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              className: \"submit pill scale\",\n              onClick: handleSubmit,\n              children: \"Submit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 194,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              className: \"reset scale\",\n              onClick: () => {\n                if (window.confirm(\"Are you sure?\")) {\n                  setValues(INITIAL_VALUES);\n                }\n              },\n              children: \"Reset\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 197,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"cntr\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        class: \"hidden-xs-up\",\n        id: \"cbx\",\n        type: \"checkbox\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        class: \"cbx\",\n        for: \"cbx\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 58\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        class: \"lbl\",\n        for: \"cbx\",\n        children: \"Make Magic\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 95\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"pLrfeJemKhc1yxwqnc3Zentki4U=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/federicobalboa/Desktop/fed-assignment-ilsxgu/my-app/src/App.js"],"names":["React","useState","Input","validation","api","INITIAL_VALUES","firstname","lastname","email","App","successMessage","setSuccessMessage","values","setValues","errors","setErrors","handleSubmit","e","preventDefault","hasErrors","result","status","message","alert","text","organization","advances","alerts","otherComs","window","confirm"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport Input from \"./components/Input\";\nimport validation from \"./validation\";\nimport \"./App.css\";\nimport \"./normalize.css\";\nimport api from \"./api\";\n\nconst INITIAL_VALUES = {\n    firstname: \"\",\n    lastname: \"\",\n    email: \"\",\n}\n\nconst App = () => {\n  const [successMessage, setSuccessMessage] = useState()\n  const [values, setValues] = useState(INITIAL_VALUES);\n  const [errors, setErrors] = useState({});\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    const { hasErrors, errors } = validation(values);\n    setErrors(errors);\n\n    if (!hasErrors) {\n        try {\n            const result = await api(values);\n\n            if (result.status === \"success\") {\n                setSuccessMessage(result.message)\n            } else {\n                throw result;\n            }\n        } catch (e) {\n            alert(e?.message || \"Oops, somthing went wrong, try again\")\n        }\n    }\n  };\n\n  if (successMessage) {\n      return (\n          <>\n        <p>{successMessage}</p>\n        <button onClick={(e) => {\n            e.preventDefault();\n            setSuccessMessage(null);\n            setValues(INITIAL_VALUES);\n        }}>OK</button>\n        </>\n      )\n  }\n\n  return (\n    <div className=\"main-container\">\n      <div>\n        <div>\n          <h2 className=\"title\">Sign up for email updates</h2>\n          <h5>*Indicates Required Field</h5>\n        </div>\n\n        <form className=\"form-container\">\n          <Input\n            type=\"text\"\n            name=\"firstname\"\n            required\n            label=\"First name\"\n            value={values.firstname}\n            onChange={(text) => {\n              setValues({\n                ...values,\n                firstname: text,\n              });\n            }}\n            error={errors.firstname}\n          />\n\n          <Input\n            type=\"text\"\n            name=\"lastname\"\n            value={values.lastname}\n            required\n            label=\"Last Name\"\n            onChange={(text) => {\n              setValues({\n                ...values,\n                lastname: text,\n              });\n            }}\n            error={errors.lastname}\n          />\n\n          <Input\n            type=\"text\"\n            name=\"email\"\n            value={values.email}\n            required\n            label=\"Email address\"\n            onChange={(text) => {\n              setValues({\n                ...values,\n                email: text,\n              });\n            }}\n            error={errors.email}\n          />\n\n          <Input\n            type=\"text\"\n            name=\"organization\"\n            value={values.organization}\n            label=\"Organization\"\n            onChange={(text) => {\n              setValues({\n                ...values,\n                organization: text,\n              });\n            }}\n            error={errors.organization}\n          />\n          <div className=\"test\">\n            <label htmlFor=\"eu-select\">\n              EU Resident*\n              <select name=\"resident\" required>\n                <option value=\"\">- SELECT ONE -</option>\n                <option value=\"yes\">Yes</option>\n                <option value=\"no\">No</option>\n              </select>\n            </label>\n\n          <div>\n            {errors.advances && <p className=\"error\">{errors.advances}</p>}\n            <label\n            htmlFor=\"advances\"\n            onClick={() => {\n                setValues({\n                    ...values,\n                    advances: !values.advances,\n                });\n            }}\n            >\n              <input\n                type=\"checkbox\"\n                name=\"advances\"\n                checked={values.advances}\n                onChange={() => {\n                  setValues({\n                    ...values,\n                    advances: !values.advances,\n                  });\n                }}\n              />\n              Advances *\n            </label>\n          </div>\n\n          <div>\n            <label\n            htmlFor=\"alerts\"\n            onClick={() => {\n                setValues({\n                    ...values,\n                    alerts: !values.alerts,\n                });\n            }}\n            >\n              <input\n                type=\"checkbox\"\n                name=\"alerts\"\n                checked={values.alerts}\n              />\n              Alerts\n            </label>\n          </div>\n\n          <div>\n            <label\n                htmlFor=\"other-communictions\"\n                onClick={() => {\n                    setValues({\n                        ...values,\n                        otherComs: !values.otherComs,\n                    });\n                }}\n            >\n              <input\n                type=\"checkbox\"\n                name=\"otherComs\"\n                checked={values.otherComs}\n              />\n              other communications\n            </label>\n          </div>\n\n          <div className=\"button_container\">\n            <button type=\"submit\" className=\"submit pill scale\" onClick={handleSubmit}>\n              Submit\n            </button>\n            <button type=\"button\" className=\"reset scale\" onClick={() => {\n                if(window.confirm(\"Are you sure?\")) {\n                    setValues(INITIAL_VALUES)\n                }\n            }}>Reset</button>\n          </div>\n          </div>\n        </form>\n      </div>\n      <div class=\"cntr\">\n  <input class=\"hidden-xs-up\" id=\"cbx\" type=\"checkbox\" /><label class=\"cbx\" for=\"cbx\"></label><label class=\"lbl\" for=\"cbx\">Make Magic</label>\n</div>\n    </div>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}